@using Client
@using Shared.Extensions
@using UI.Localization
@using ViewModel
@using System.Linq;

@inject IStringResourceManager ResourceManager
@inject IStylingResourceManager Styling

@inject IServerProxy ServerProxy

<div class="container">
    <table class="@Styling["Table"]">
        <thead>
            @ResourceManager["Users"]
            <tr>
                <th scope="col">@ResourceManager["Username"]</th>
                <th scope="col">@ResourceManager["UserClearance"]</th>
            </tr>
        </thead>
        <tbody>
            <RoomResClient.UI.Components.GenericList Elements="Users">
                <ContentTemplate>
                    @foreach (var user in Users)
                    {
                        <tr>
                            <td>@user.Name</td>
                            <td>@user.UserClearance.GetDescription()</td>
                        </tr>
                    }
                </ContentTemplate>
            </RoomResClient.UI.Components.GenericList>
        </tbody>
    </table>
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        Users = await ServerProxy.GetAllUsers()
                .ContinueWith(tsk => tsk.Result.Select(dto => (IUserViewModel)new UserViewModel(dto)).ToList());
    }
    // Listen to user list updates from server (notifications)
    // OnLoad - get a list of users from the server (preloaded from db)
    // display all users, formatted in Hebrew, with styling.
    // Use GenericList
    // Show username, clearance...

    #region Private Members

    private List<IUserViewModel> Users { get; set; }

    #endregion
}
