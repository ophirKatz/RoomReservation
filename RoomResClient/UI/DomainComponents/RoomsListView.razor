@using UI.Localization
@using ViewModel
@using System.Linq;
@using UI.DomainComponents.Modals;
@using Data.EventArgs;

@inject IStringResourceManager ResourceManager
@inject IStylingResourceManager Styling

@inject IServerProxy ServerProxy
@inject IMatToaster Toaster

<div class="container">
    <RoomResClient.UI.Components.FilterableTable Elements="Rooms"
                                                 DisplayElement="roomDisplayPredicate">
        <TableHeaderTemplate>
            <tr>
                <th scope="col">תיאור</th>
                <th scope="col">מיקום</th>
                <th scope="col">משתתפים</th>
            </tr>
        </TableHeaderTemplate>
        <TableRowTemplate Context="room">
            <ContextMenuTrigger MenuId="roomReservationMenu" Data="room">
                <td>
                    @room.Description
                </td>
                <td>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item active" aria-current="page">@room.Location.Building</li>
                            <li class="breadcrumb-item active" aria-current="page">@room.Location.Floor</li>
                            <li class="breadcrumb-item active" aria-current="page">@room.Location.Number</li>
                        </ol>
                    </nav>
                </td>
                <td>
                    <span class="badge badge-light .octicon-organization">@room.Capacity</span>
                </td>
            </ContextMenuTrigger>
        </TableRowTemplate>
    </RoomResClient.UI.Components.FilterableTable>
</div>

<ContextMenu Id="roomReservationMenu" Animation="Animation.Grow">
    <Item OnClick="@ReserveRoomNow">הזמן עכשיו</Item>
    <Item OnClick="@ReserveRoomAhead">הזמן מראש</Item>
</ContextMenu>

<RoomResClient.UI.DomainComponents.Modals.ReservationDialog @ref="reservationDialog"
                                                            OkCallback="OnMakeReservation" />

@code {
    protected override async Task OnInitializedAsync()
    {
        AllRooms = await ServerProxy.GetAllRooms()
                .ContinueWith(tsk => tsk.Result.Select(dto => (IRoomViewModel)new RoomViewModel(dto)).ToList());
        Rooms = AllRooms;
    }

    private async void OnMakeReservation(object obj, MakeReservationEventArgs args)
    {
        if (SelectedRoom == null || args == null) return;
        var details = new Shared.Dto.ReservationDetails
        {
            StartTime = args.StartTime,
            EndTime = args.EndTime,
            RequiredClearance = args.RequiredClearance
        };
        var result = await ServerProxy.AddNewReservation(details, "ofirkatz", SelectedRoom.Description);
        if (!result)
        {
            Toaster.Add(string.Format("זימון חדר {0} נכשל", SelectedRoom.Description), MatToastType.Warning, "זימון חדר");
            return;
        }
        Toaster.Add(string.Format("זימון חדר {0} הסתיים בהצלחה", SelectedRoom.Description), MatToastType.Success, "זימון חדר");
    }

    #region Context Menu

    private void ReserveRoomNow(ItemClickEventArgs e)
    {
        SelectedRoom = e.Data as IRoomViewModel;
        reservationDialog.ReserveNow();
        reservationDialog.Show();
    }

    private void ReserveRoomAhead(ItemClickEventArgs e)
    {
        SelectedRoom = e.Data as IRoomViewModel;
        reservationDialog.Show();
    }

    #endregion

    #region Private Members

    private List<IRoomViewModel> Rooms { get; set; }
    private List<IRoomViewModel> AllRooms { get; set; }

    private Predicate<IRoomViewModel> roomDisplayPredicate = new Predicate<IRoomViewModel>(r => r.Display);
    private ReservationDialog reservationDialog;
    private IRoomViewModel SelectedRoom { get; set; }

    #endregion
}
