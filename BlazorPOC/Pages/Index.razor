@page "/"
@using Client
@using Common.Data
@inject IServerProxy ServerProxy
@inject IConnectedServerModel connectedServerModel
@inject IToastService ToastService

<table class="table">
    <tbody>
        <tr>
            <td>
                <button class="btn btn-info" @onclick="@(() => ToastService.ShowInfo("I'm an INFO message"))">Info Toast</button>
            </td>
        </tr>
        <tr>
            <td>
                <h1>Hello, World!</h1>

                Welcome to your new app.
                <BlazorPOC.Components.Alert Type=@Data.AlertType.Error />
                <BlazorPOC.Components.Alert Type=@Data.AlertType.Info />
                <BlazorPOC.Components.Alert Type=@Data.AlertType.Success />
                <BlazorPOC.Components.Alert Type=@Data.AlertType.Warning />
                <BlazorPOC.Components.TimedToast Message="Hello"/>
                <button class="btn btn-info" @onclick="@(() => ToastService.ShowInfo("I'm an INFO message"))">Info Toast</button>
            </td>
            <td class="fa-align-left">
                <WeatherForecastServer ConnectedServerModel="connectedServerModel" />
            </td>
            <td>
                <BlazorPOC.Components.GenericList Elements=@NumArray>
                    <ContentTemplate>
                        @foreach (var i in NumArray)
                        {
                            <div>
                                <button class="btn btn-primary">Number: @i</button>
                            </div>
                            <div class="fa-circle"></div>
                        }
                    </ContentTemplate>
                </BlazorPOC.Components.GenericList>
            </td>
        </tr>
    </tbody>
</table>


@code {
    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(2000)
            .ContinueWith(_ => NumArray = new[] { 1, 2, 3, 4, 5 });
        await ServerProxy.SetWeatherServerName("Ophir", 123);
    }

    private IEnumerable<int> NumArray { get; set; }
}