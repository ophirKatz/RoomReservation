@page "/fetchdata"

@using Client
@using Common.Data
@using Common.Data.EventArgs
@using Common.Communication
@inject IWeatherForecastModel WeatherForecastModel
@inject IServerProxy ServerProxy
@inject IWeatherClient WeatherClient

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (Forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in Forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] Forecasts { get; set; }

    // TODO : call to server service via server proxy...
    protected override async Task OnInitializedAsync()
    {
        WeatherForecastModel.WeatherForecastsChanged += OnForecastsReceived;
        await ServerProxy.GetForecastAsync(DateTime.Now);
    }

    private void OnForecastsReceived(object caller, WeatherForecastEventArgs args)
    {
        Forecasts = args.Forecasts;
    }
}
